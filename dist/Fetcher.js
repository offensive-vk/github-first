"use strict";var m=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var F=(s,e)=>{for(var t in e)i(s,t,{get:e[t],enumerable:!0})},c=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of d(e))!_.call(s,a)&&a!==t&&i(s,a,{get:()=>e[a],enumerable:!(r=p(e,a))||r.enumerable});return s};var l=(s,e,t)=>(t=s!=null?m(h(s)):{},c(e||!s||!s.__esModule?i(t,"default",{value:s,enumerable:!0}):t,s)),w=s=>c(i({},"__esModule",{value:!0}),s);var y={};F(y,{GitHubFetcher:()=>n});module.exports=w(y);var u=l(require("@actions/core")),g=l(require("@actions/github")),n=class{octokit;username="";async fetchFirstEverything(e,t){this.username=e,this.octokit=g.getOctokit(t);let r={username:e};try{r.accountCreated=await this.getAccountCreated(),r.firstRepository=await this.getFirstRepository(),r.firstCommit=await this.getFirstCommit(),r.firstIssue=await this.getFirstIssue(),r.firstPullRequest=await this.getFirstPullRequest(),r.firstGist=await this.getFirstGist(),r.firstStarredRepo=await this.getFirstStarredRepo(),r.firstWorkflowRun=await this.getFirstWorkflowRun(),r.firstFork=await this.getFirstFork(),r.firstOrganization=await this.getFirstOrganization(),r.firstFollowing=await this.getFirstFollowing(),r.firstFollower=await this.getFirstFollower(),r.firstPublicEvent=await this.getFirstPublicEvent(),r.firstRelease=await this.getFirstRelease(),r.firstComment=await this.getFirstComment(),r.firstWatch=await this.getFirstWatch(),r.firstContribution=await this.getFirstContribution()}catch(a){u.warning(`Partial fetch \u2013 some data may be missing: ${a}`)}return r}async getAccountCreated(){let{data:e}=await this.octokit.users.getByUsername({username:this.username});return e.created_at??null}async getFirstRepository(){let{data:e}=await this.octokit.repos.listForUser({username:this.username,sort:"created",direction:"asc",per_page:1});return e?.[0]?{name:e[0].name,created_at:e[0].created_at}:null}async getFirstCommit(){let e=await this.getFirstRepository();if(!e)return null;let{data:t}=await this.octokit.repos.listCommits({owner:this.username,repo:e.name,per_page:1,sort:"author-date",direction:"asc"}),r=t?.[0];return r?{sha:r.sha,commit:r.commit}:null}async getFirstIssue(){let{data:e}=await this.octokit.search.issuesAndPullRequests({q:`author:${this.username}+type:issue`,sort:"created",order:"asc",per_page:1}),t=e?.items?.[0];return t?{issue_number:t.number,created_at:t.created_at}:null}async getFirstPullRequest(){let{data:e}=await this.octokit.search.issuesAndPullRequests({q:`author:${this.username}+type:pr`,sort:"created",order:"asc",per_page:1}),t=e?.items?.[0];return t?{pr_number:t.number,created_at:t.created_at}:null}async getFirstGist(){let{data:e}=await this.octokit.gists.listForUser({username:this.username,per_page:1,sort:"created",direction:"asc"}),t=e?.[0];return t?{id:t.id,created_at:t.created_at}:null}async getFirstStarredRepo(){let{data:e}=await this.octokit.activity.listReposStarredByUser({username:this.username,per_page:1,sort:"created",direction:"asc"}),t=e?.[0];return t?{full_name:t.full_name,created_at:t.created_at}:null}async getFirstWorkflowRun(){let{data:e}=await this.octokit.actions.listWorkflowRunsForUser({username:this.username,per_page:1,sort:"created",direction:"asc"}),t=e?.workflow_runs?.[0];return t?{name:t.name??"Unnamed",created_at:t.created_at}:null}async getFirstFork(){let{data:e}=await this.octokit.repos.listForUser({username:this.username,type:"forks",sort:"created",direction:"asc",per_page:1}),t=e?.[0];return t?{name:t.name,created_at:t.created_at}:null}async getFirstOrganization(){let{data:e}=await this.octokit.orgs.listForUser({username:this.username,per_page:1}),t=e?.[0];return t?{login:t.login}:null}async getFirstFollowing(){let{data:e}=await this.octokit.users.listFollowingForAuthenticatedUser({per_page:1}),t=e?.[0];return t?{login:t.login}:null}async getFirstFollower(){let{data:e}=await this.octokit.users.listFollowersForUser({username:this.username,per_page:1}),t=e?.[0];return t?{login:t.login}:null}async getFirstPublicEvent(){let t=1,r=null;for(;;){let{data:a}=await this.octokit.activity.listPublicEventsForUser({username:this.username,per_page:100,page:t});if(!a.length)break;let o=a[a.length-1];if(r={type:o.type,created_at:o.created_at},a.length<100)break;t++}return r}async getFirstRelease(){let e=await this.getFirstRepository();if(!e)return null;let{data:t}=await this.octokit.repos.listReleases({owner:this.username,repo:e.name,per_page:1,sort:"created",direction:"asc"}),r=t?.[0];return r?{tag_name:r.tag_name,created_at:r.created_at}:null}async getFirstComment(){let{data:e}=await this.octokit.search.issuesAndPullRequests({q:`commenter:${this.username}`,sort:"created",order:"asc",per_page:1}),t=e?.items?.[0];return t?{issue_number:t.number,created_at:t.created_at}:null}async getFirstWatch(){let{data:e}=await this.octokit.activity.listReposWatchedByUser({username:this.username,per_page:1,sort:"created",direction:"asc"}),t=e?.[0];return t?{full_name:t.full_name,created_at:t.created_at}:null}async getFirstContribution(){let{data:e}=await this.octokit.search.issuesAndPullRequests({q:`author:${this.username}+type:pr`,sort:"created",order:"asc",per_page:1}),t=e?.items?.[0];return t?{type:"PR",repo:t.repository_url?.replace("https://api.github.com/repos/","")??"unknown",created_at:t.created_at}:null}};0&&(module.exports={GitHubFetcher});
//# sourceMappingURL=Fetcher.js.map
